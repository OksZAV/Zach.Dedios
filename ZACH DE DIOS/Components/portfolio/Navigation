import React, { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Menu, X } from "lucide-react";

export default function Navigation() {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 100);
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  useEffect(() => {
    if (isMenuOpen) {
      document.body.style.overflow = "hidden";
    } else {
      document.body.style.overflow = "unset";
    }
  }, [isMenuOpen]);

  const menuItems = [
    { label: "HOME", href: "#hero" },
    { label: "SERVICES", href: "#journey" },
    { label: "WORKS", href: "#projects" },
    { label: "ABOUT", href: "#skills" },
    { label: "CONTACT", href: "#contact" },
  ];

  const scrollToSection = (href) => {
    const element = document.querySelector(href);
    if (element) {
      element.scrollIntoView({ behavior: "smooth" });
      setIsMenuOpen(false);
    }
  };

  return (
    <>
      {/* Desktop Navigation */}
      <motion.nav
        initial={{ y: -100 }}
        animate={{ y: 0 }}
        transition={{ duration: 0.6 }}
        className={`fixed top-0 left-0 right-0 z-40 transition-all duration-500 ${
          isScrolled
            ? "bg-transparent"
            : "bg-[#0A0A0A]/50 backdrop-blur-sm border-b border-white/5"
        }`}
      >
        <div
          className={`transition-all duration-500 ${
            isScrolled
              ? "max-w-none px-0"
              : "max-w-7xl mx-auto px-6 py-6"
          }`}
        >
          {!isScrolled ? (
            <div className="flex items-center justify-between">
              <div className="text-sm text-gray-400 tracking-wide">
                Web Developer & Designer
              </div>
              <div className="flex gap-8">
                {menuItems.map((item) => (
                  <button
                    key={item.label}
                    onClick={() => scrollToSection(item.href)}
                    className="text-sm text-gray-300 hover:text-[#FF6B35] transition-colors"
                  >
                    {item.label.charAt(0) + item.label.slice(1).toLowerCase()}
                  </button>
                ))}
              </div>
            </div>
          ) : (
            <div className="fixed top-6 right-6">
              <motion.button
                initial={{ scale: 0 }}
                animate={{ scale: 1 }}
                onClick={() => setIsMenuOpen(true)}
                className="p-4 bg-[#E8E5DD] rounded-full hover:bg-[#d4d1c9] transition-colors"
              >
                <Menu className="w-6 h-6 text-black" />
              </motion.button>
            </div>
          )}
        </div>
      </motion.nav>

      {/* Fullscreen Menu Overlay */}
      <AnimatePresence>
        {isMenuOpen && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black z-50 flex items-center justify-center"
          >
            {/* Close Button */}
            <motion.button
              initial={{ scale: 0, rotate: -180 }}
              animate={{ scale: 1, rotate: 0 }}
              exit={{ scale: 0, rotate: 180 }}
              transition={{ duration: 0.3 }}
              onClick={() => setIsMenuOpen(false)}
              className="absolute top-6 right-6 p-4 bg-[#E8E5DD] rounded-full hover:bg-[#d4d1c9] transition-colors"
            >
              <X className="w-6 h-6 text-black" />
            </motion.button>

            {/* Menu Items */}
            <div className="text-center">
              {menuItems.map((item, index) => (
                <motion.button
                  key={item.label}
                  initial={{ opacity: 0, y: 50 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: 50 }}
                  transition={{ delay: index * 0.1 }}
                  onClick={() => scrollToSection(item.href)}
                  className="block text-6xl md:text-8xl font-bold text-white hover:text-[#FF6B35] transition-colors mb-4"
                >
                  {item.label}
                </motion.button>
              ))}

              {/* Footer Info */}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.6 }}
                className="mt-16 space-y-4"
              >
                <div className="text-gray-500 text-sm tracking-wider">
                  EMAIL ADDRESS
                </div>
                <div className="text-gray-300 text-sm">
                  contact@onedanfilm.com
                </div>
                <div className="flex justify-center gap-6 mt-6 text-sm text-gray-300">
                  <a href="#" className="hover:text-[#FF6B35] transition-colors">
                    LinkedIn
                  </a>
                  <a href="#" className="hover:text-[#FF6B35] transition-colors">
                    Github
                  </a>
                  <a href="#" className="hover:text-[#FF6B35] transition-colors">
                    Leetcode
                  </a>
                </div>
              </motion.div>
            </div>

            {/* Background Blob */}
            <div className="absolute top-0 right-0 w-[600px] h-[600px] bg-[#3A3A3A] rounded-full -translate-y-1/3 translate-x-1/3" />
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
}